<?php

/*
 * This file is part of the FusionCMS application.
 *
 * (c) efelle creative <appdev@efelle.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace App\Models\Collections;

use App\Models\Field;
use App\Models\Matrix;
use Illuminate\Support\Str;
use App\Database\Eloquent\Model;
use Spatie\Activitylog\Models\Activity;
use Spatie\Activitylog\Traits\LogsActivity;

class {class} extends Model
{
    use LogsActivity;

	/**
     * The table associated with the model.
     *
     * @var string
     */
    protected $table = 'mx_{handle}';

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = {casts};

    /**
     * Mass assignment protection.
     *
     * @var array
     */
    protected $fillable = {fillable};

    /**
     * Mass reference protection.
     *
     * @var array
     */
    protected $references = {references};

    /**
     * The attributes that should be mutated to dates.
     *
     * @var array
     */
    protected $dates = {dates};

    /**
     * Mass reference protection.
     *
     * @var array
     */
    public function getReferences()
    {
        return $this->references;
    }

    /**
     * Get the Matrix Type relationship.
     *
     * @return mixed
     */
    public function matrix()
    {
        return $this->belongsTo(Matrix::class);
    }

    /**
     * Get all of the fields for the matrix.
     */
    public function getFieldsAttribute()
    {
        return $this->matrix->fieldset->fields ?? null;
    }

    public function parent()
    {
        return $this->hasOne(Matrix::class, 'id', 'parent_id');
    }

    public function children()
    {
        return $this->hasMany(Matrix::class, 'parent_id', 'id');
    }

    {relationships}

    /**
     * Tap into activity before persisting to database.
     * 
     * @param  \Spatie\Activitylog\Models\Activity $activity
     * @param  string   $eventName
     * @return void             
     */
    public function tapActivity(Activity $activity, string $eventName)
    {
        $entry      = $activity->subject;
        $matrix     = $entry->matrix;
        $action     = Str::ucfirst($eventName);
        $modelName  = Str::singular($matrix->name);
        $properties = ['icon' => $matrix->icon];

        if ($eventName !== 'deleted') {
            $properties['link'] = "collections/{$matrix->slug}/{$entry->id}/edit";
        }

        $activity->description = "{$action} {$modelName} ({$entry->name})";
        $activity->properties  = $properties;
    }
}